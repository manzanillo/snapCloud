env HOSTNAME;
env SECONDARY_HOSTNAME;
env PORT;
env DATABASE_URL;
env DATABASE_USERNAME;
env DATABASE_PASSWORD;
env DATABASE_NAME;
env SESSION_SECRET_BASE;
env CODE_CACHE;
env DNS_RESOLVER;
env LOG_DIRECTIVE;
env MAIL_SMTP_USER;
env MAIL_SMTP_PASSWORD;
env MAIL_SMTP_SERVER;
env USE_DAEMON;
env WORKER_CONNECTIONS;
env DISCOURSE_SSO_SECRET;

worker_processes ${{NUM_WORKERS}};
error_log ${{LOG_DIRECTIVE}};
daemon ${{USE_DAEMON}};
pid logs/nginx.pid;

events {
    worker_connections ${{WORKER_CONNECTIONS}};
}

http {
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '"$host" sn="$server_name" '
                        'rt=$request_time '
                        'ua="$upstream_addr" us="$upstream_status" '
                        'ut="$upstream_response_time" ul="$upstream_response_length" '
                        'cs=$upstream_cache_status';

    access_log logs/access.log main_ext;

    include nginx.conf.d/mime.types;
    lua_shared_dict page_cache 15m;
    resolver ${{DNS_RESOLVER}};

    lua_code_cache ${{CODE_CACHE}};

    client_body_buffer_size     10M;
    client_max_body_size        10M;

    # We use a separate server block for each host to serve specific certs.
    server {
        server_name ${{HOSTNAME}} ${{SECONDARY_HOSTNAME}};
        listen ${{PORT}} default_server;
        # nginx amplify listen
        listen 127.0.0.1:${{PORT}};

        include nginx.conf.d/${{PRIMARY_NGINX_CONFIG}};
    }

    # development: this is simply empty, otherwise it contains SSL settings.
    # do not include the `;`. It is included in config.lua
    ${{SECONDARY_NGINX_CONFIG}}
}
